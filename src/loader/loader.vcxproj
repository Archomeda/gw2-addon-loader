<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{0A527FC4-C30A-48DE-A9ED-8B3E0242CA02}</ProjectGuid>
    <RootNamespace>GW2AddonLoader</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)bin\$(PlatformTarget)\$(Configuration)\</OutDir>
    <IntDir>obj\$(PlatformTarget)\$(Configuration)\</IntDir>
    <TargetName>d3d9</TargetName>
    <IncludePath>$(ProjectDir)..\dependencies\IconFontCppHeaders;$(ProjectDir)..\dependencies\imgui;$(ProjectDir)..\dependencies\miniz;$(ProjectDir)..\dependencies\rapidjson\include;$(ProjectDir)..\dependencies\simpleini;$(ProjectDir)..\dependencies\spdlog\include;$(ProjectDir)..\..\include;$(IncludePath);$(DXSDK_DIR)Include</IncludePath>
    <LibraryPath>$(LibraryPath);$(DXSDK_DIR)Lib\x86</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)bin\$(PlatformTarget)\$(Configuration)\</OutDir>
    <IntDir>obj\$(PlatformTarget)\$(Configuration)\</IntDir>
    <TargetName>d3d9</TargetName>
    <IncludePath>$(ProjectDir)..\dependencies\IconFontCppHeaders;$(ProjectDir)..\dependencies\imgui;$(ProjectDir)..\dependencies\miniz;$(ProjectDir)..\dependencies\rapidjson\include;$(ProjectDir)..\dependencies\simpleini;$(ProjectDir)..\dependencies\spdlog\include;$(ProjectDir)..\..\include;$(IncludePath);$(DXSDK_DIR)Include</IncludePath>
    <LibraryPath>$(LibraryPath);$(DXSDK_DIR)Lib\x86</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)bin\$(PlatformTarget)\$(Configuration)\</OutDir>
    <IntDir>obj\$(PlatformTarget)\$(Configuration)\</IntDir>
    <TargetName>d3d9</TargetName>
    <IncludePath>$(ProjectDir)..\dependencies\IconFontCppHeaders;$(ProjectDir)..\dependencies\imgui;$(ProjectDir)..\dependencies\miniz;$(ProjectDir)..\dependencies\rapidjson\include;$(ProjectDir)..\dependencies\simpleini;$(ProjectDir)..\dependencies\spdlog\include;$(ProjectDir)..\..\include;$(IncludePath);$(DXSDK_DIR)Include</IncludePath>
    <LibraryPath>$(LibraryPath);$(DXSDK_DIR)Lib\x64</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)bin\$(PlatformTarget)\$(Configuration)\</OutDir>
    <IntDir>obj\$(PlatformTarget)\$(Configuration)\</IntDir>
    <TargetName>d3d9</TargetName>
    <IncludePath>$(ProjectDir)..\dependencies\IconFontCppHeaders;$(ProjectDir)..\dependencies\imgui;$(ProjectDir)..\dependencies\miniz;$(ProjectDir)..\dependencies\rapidjson\include;$(ProjectDir)..\dependencies\simpleini;$(ProjectDir)..\dependencies\spdlog\include;$(ProjectDir)..\..\include;$(IncludePath);$(DXSDK_DIR)Include</IncludePath>
    <LibraryPath>$(LibraryPath);$(DXSDK_DIR)Lib\x64</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>exports.def</ModuleDefinitionFile>
      <AdditionalDependencies>Mincore.lib;Shlwapi.lib;wininet.lib;d3dx9.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>exports.def</ModuleDefinitionFile>
      <AdditionalDependencies>Mincore.lib;Shlwapi.lib;wininet.lib;d3dx9.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Mincore.lib;Shlwapi.lib;wininet.lib;d3dx9.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>exports.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Mincore.lib;Shlwapi.lib;wininet.lib;d3dx9.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>exports.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="addons\AddonFunc.h" />
    <ClInclude Include="addons\NativeAddon.h" />
    <ClInclude Include="globals.h" />
    <ClInclude Include="updaters\Downloader.h" />
    <ClInclude Include="updaters\GithubReleasesUpdater.h" />
    <ClInclude Include="gui\BitmapFontAtlas.h" />
    <ClInclude Include="gui\imgui.h" />
    <ClInclude Include="gui\SettingsWindow.h" />
    <ClInclude Include="addons\Addon.h" />
    <ClInclude Include="addons\addons_manager.h" />
    <ClInclude Include="addons\exceptions.h" />
    <ClInclude Include="gui\gui_manager.h" />
    <ClInclude Include="gui\MessageWindow.h" />
    <ClInclude Include="hooks\ChainHook.h" />
    <ClInclude Include="hooks\FunctionHook.h" />
    <ClInclude Include="hooks\LoaderDirect3D9.h" />
    <ClInclude Include="hooks\LoaderDirect3DDevice9.h" />
    <ClInclude Include="hooks\MumbleLink.h" />
    <ClInclude Include="hooks\vftable.h" />
    <ClInclude Include="IconsOcticons.h" />
    <ClInclude Include="input.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="addons\AddonMetric.h" />
    <ClInclude Include="updaters\Installer.h" />
    <ClInclude Include="updaters\Updater.h" />
    <ClInclude Include="updaters\update_manager.h" />
    <ClInclude Include="utils\debug.h" />
    <ClInclude Include="utils\encoding.h" />
    <ClInclude Include="utils\file.h" />
    <ClInclude Include="utils\web.h" />
    <ClInclude Include="version.h" />
    <ClInclude Include="windows.h" />
    <ClInclude Include="Config.h" />
    <ClInclude Include="hooks\hooks_manager.h" />
    <ClInclude Include="log.h" />
    <ClInclude Include="gui\AddonInfoWindow.h" />
    <ClInclude Include="main.h" />
    <ClInclude Include="gui\Window.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="addons\NativeAddon.cpp" />
    <ClCompile Include="updaters\Downloader.cpp" />
    <ClCompile Include="updaters\GithubReleasesUpdater.cpp" />
    <ClCompile Include="gui\BitmapFontAtlas.cpp" />
    <ClCompile Include="gui\imgui.cpp" />
    <ClCompile Include="gui\SettingsWindow.cpp" />
    <ClCompile Include="addons\Addon.cpp" />
    <ClCompile Include="addons\addons_manager.cpp" />
    <ClCompile Include="Config.cpp" />
    <ClCompile Include="gui\gui_manager.cpp" />
    <ClCompile Include="gui\MessageWindow.cpp" />
    <ClCompile Include="hooks\ChainHook.cpp" />
    <ClCompile Include="hooks\FunctionHook.cpp" />
    <ClCompile Include="hooks\hooks_manager.cpp" />
    <ClCompile Include="hooks\LoaderDirect3D9.cpp" />
    <ClCompile Include="hooks\LoaderDirect3DDevice9.cpp" />
    <ClCompile Include="hooks\MumbleLink.cpp" />
    <ClCompile Include="hooks\vftable.c" />
    <ClCompile Include="input.cpp" />
    <ClCompile Include="log.cpp" />
    <ClCompile Include="gui\AddonInfoWindow.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="gui\Window.cpp" />
    <ClCompile Include="addons\AddonMetric.cpp" />
    <ClCompile Include="updaters\Installer.cpp" />
    <ClCompile Include="updaters\Updater.cpp" />
    <ClCompile Include="updaters\update_manager.cpp" />
    <ClCompile Include="utils\debug.cpp" />
    <ClCompile Include="utils\encoding.cpp" />
    <ClCompile Include="utils\file.cpp" />
    <ClCompile Include="utils\web.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="exports.def" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\dependencies\dependencies.vcxproj">
      <Project>{9a4064cf-5604-4363-9b07-02f4f7071de3}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="loader.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets" Condition="Exists('..\..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets'))" />
  </Target>
  <!-- Automatic versioning -->
  <Target Name="GetVersion" DependsOnTargets="EnsureNuGetPackageBuildImports" Condition="'$(SkipVersion)'!='true'">
    <GitDescribe LightWeight="true" Always="true" LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="CommitCount" PropertyName="CommitCount" />
      <Output TaskParameter="Tag" PropertyName="Tag" />
    </GitDescribe>
    <GitBranch LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="Branch" PropertyName="Branch" />
    </GitBranch>
    <GitVersion LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="CommitHash" PropertyName="CommitHash" />
    </GitVersion>
    <GitPendingChanges LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="HasPendingChanges" PropertyName="HasPendingChanges" />
    </GitPendingChanges>
    <PropertyGroup>
      <!-- Local versioning -->
      <VersionString>$(Tag)</VersionString>
      <VersionString Condition="'$(CommitCount)'!='0'">$(Tag)-$(CommitHash)</VersionString>
      <VersionString Condition="'$(Tag)'==''">$(CommitHash)</VersionString>
      <VersionString Condition="'$(Branch)'!='master'">$(VersionString)-$(Branch)</VersionString>
      <DevString Condition="'$(HasPendingChanges)'=='true'"> (modified)</DevString>
      <DevString Condition="'$(Configuration)'=='Debug'"> (dev)</DevString>
      <DevString Condition="'$(Configuration)|$(HasPendingChanges)'=='Debug|true'"> (dev, modified)</DevString>
      <AutomaticVersion>$(VersionString)$(DevString)</AutomaticVersion>
      <!-- AppVeyor versioning -->
      <AutomaticVersion Condition="'$(APPVEYOR_BUILD_NUMBER)'!=''">$(APPVEYOR_BUILD_NUMBER)-$(CommitHash)</AutomaticVersion>
      <AutomaticVersion Condition="'$(APPVEYOR_REPO_BRANCH)'!='' And '$(APPVEYOR_REPO_BRANCH)'!='master'">$(AutomaticVersion)-$(APPVEYOR_REPO_BRANCH)</AutomaticVersion>
      <AutomaticVersion Condition="'$(APPVEYOR_PULL_REQUEST_NUMBER)'!=''">$(AutomaticVersion)-PR$(APPVEYOR_PULL_REQUEST_NUMBER)</AutomaticVersion>
      <AutomaticVersion Condition="'$(APPVEYOR_REPO_TAG_NAME)'!=''">$(APPVEYOR_REPO_TAG_NAME)</AutomaticVersion>
    </PropertyGroup>
  </Target>
  <Target Name="ExportVersion:SanityCheck">
    <Error Code="1" Text="ExportFile property is empty" Condition="'$(ExportFile)'==''" />
    <PropertyGroup>
      <IsRepo Condition="Exists('$(SolutionDir).git')">true</IsRepo>
    </PropertyGroup>
    <Exec Command="where git &gt;NUL 2&gt;NUL" IgnoreExitCode="true" EchoOff="true" Condition="'$(IsRepo)'=='true'">
      <Output TaskParameter="ExitCode" PropertyName="GitUnavailable" />
    </Exec>
    <Error Code="2" Text="Git isn't available" Condition="Exists('$(SolutionDir).git') And '$(GitUnavailable)'!='0'" />
    <Error Code="3" Text="This folder is not a cloned Git repository" Condition="!Exists('$(SolutionDir).git')" />
  </Target>
  <Target Name="ExportVersion" DependsOnTargets="ExportVersion:SanityCheck;GetVersion">
    <Message Text="Automatic versioning: $(AutomaticVersion)" Importance="high" />
    <WriteLinesToFile File="$(ExportFile)" Lines="$(AutomaticVersion)" Overwrite="true" />
  </Target>
  <Target Name="AutomaticVersion:SanityCheck">
    <PropertyGroup>
      <IsRepo Condition="Exists('$(SolutionDir).git')">true</IsRepo>
    </PropertyGroup>
    <Exec Command="where git &gt;NUL 2&gt;NUL" IgnoreExitCode="true" EchoOff="true" Condition="'$(IsRepo)'=='true'">
      <Output TaskParameter="ExitCode" PropertyName="GitUnavailable" />
    </Exec>
    <Warning Text="Git is not installed. You can continue to build this project, but automatic versioning will not be available. Please install Git in order to use automatic versioning." Condition="Exists('$(SolutionDir).git') And '$(GitUnavailable)'!='0'" />
    <Warning Text="This copy of Guild Wars 2 Addon Loader has not been cloned with Git. You can continue to build this project, but automatic versioning will not be available. Please clone the original repository and install Git in order to use automatic versioning." Condition="!Exists('$(SolutionDir).git')" />
    <PropertyGroup>
      <SkipVersion>true</SkipVersion>
      <SkipVersion Condition="Exists('$(SolutionDir).git') And '$(GitUnavailable)'=='0'">false</SkipVersion>
    </PropertyGroup>
  </Target>
  <Target Name="AutomaticVersion" BeforeTargets="PrepareForBuild" DependsOnTargets="AutomaticVersion:SanityCheck;GetVersion">
    <Delete Files="version_generated.h" Condition="'$(SkipVersion)'=='true'" />
    <ItemGroup Condition="'$(SkipVersion)'!='true'">
      <VersioningText Include="// AUTOGENERATED, ANY CHANGE HERE WILL BE OVERWRITTEN BEFORE COMPILATION" />
      <VersioningText Include="#pragma once" />
      <VersioningText Include="#define VERSION &quot;$(AutomaticVersion)&quot;" />
    </ItemGroup>
    <Message Text="Automatic versioning: $(AutomaticVersion)" Importance="high" Condition="'$(SkipVersion)'!='true'" />
    <WriteLinesToFile File="version_generated.h" Lines="@(VersioningText)" Overwrite="true" Condition="'$(SkipVersion)'!='true'" />
  </Target>
  <!-- /Automatic versioning -->
</Project>